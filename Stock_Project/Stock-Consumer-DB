from kafka import KafkaConsumer
import json
import mysql.connector
from mysql.connector import Error
import pandas as pd
import numpy as np

# MySQL Database Configuration
db_config = {
    'user': 'root',
    'password': 'Amit@8709',
    'host': 'localhost',
    'database': 'stock'
}

# Kafka Consumer Configuration
kafka_bootstrap_servers = ['localhost:9092']
kafka_topic = 'stock-topic'  # Use the same topic as the producer

try:
    # Initialize MySQL connection
    connection = mysql.connector.connect(**db_config)
    cursor = connection.cursor()

    # Initialize Kafka Consumer
    consumer = KafkaConsumer(
        kafka_topic,
        bootstrap_servers=kafka_bootstrap_servers,
        auto_offset_reset='earliest',
        value_deserializer=lambda v: json.loads(v.decode('utf-8')),
        consumer_timeout_ms=10000  # Adjust based on your use case
    )
    insert_query = """
    INSERT INTO stock_data (Date, Symbol, Series, Prev_Close, Open, High, Low, Last, Close, VWAP, Volume, Turnover, Trades, Deliverable_Volume, Percent_Deliverable)
    VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
    """

    # Consume messages from Kafka and insert into MySQL
    for message in consumer:
        data = message.value
        
        # Replace NaN values with None for MySQL
        data = {k: (None if pd.isna(v) else v) for k, v in data.items()}
        
        # Prepare data for insertion (make sure keys match column names)
        record = (
            data['Date'],
            data['Symbol'],
            data['Series'],
            data['Prev Close'],
            data['Open'],
            data['High'],
            data['Low'],
            data['Last'],
            data['Close'],
            data['VWAP'],
            data['Volume'],
            data['Turnover'],
            data['Trades'],
            data['Deliverable Volume'],
            data['%Deliverble']
        )

        # Insert the record only if there's no NaN in required fields
        try:
            cursor.execute(insert_query, record)
            connection.commit()
            print(f"Inserted record for Date: {data['Date']}")
        except Error as e:
            print(f"Error inserting record: {e}")
            continue

except Error as e:
    print(f"Error: {e}")

finally:
    if connection.is_connected():
        cursor.close()
        connection.close()
        print("MySQL connection is closed")

    # Close the Kafka consumer
    consumer.close()